@model PlinePager.Models.TblSchedule

@{
    List<TblArea> areas = ViewBag.tblAreas;
    List<TblSound> sounds = ViewBag.tblSounds;
}

<div class="row">
    <div class="col-6 offset-3">
        <h4>جزییات برنامه بخش</h4>
        <hr/>
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Name)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Name)
            </dd>
            <hr/>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Areas)
            </dt>
            <dd class="col-sm-10">
                <ul>
                    @foreach (TblArea item in areas)
                    {
                        <li>@item.Name</li>
                    }
                </ul>
            </dd>
            <hr/>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Sounds)
            </dt>
            <dd class="col-sm-10">
                <ul>
                    @foreach (TblSound item in sounds)
                    {
                        <li>
                            <p>@item.Name</p>
                            <audio controls>
                                <source src="/@item.FileName" type="audio/wav">
                                Your browser does not support the audio element.
                            </audio>
                        </li>
                    }
                </ul>
            </dd>
            <hr/>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.OfDate)
            </dt>
            <dd class="col-sm-10">
                @Html.Raw(Model.OfDate) - ساعت
                @Html.Raw(Model.OfHour.ToString("00")):
                @Html.Raw(Model.OfMinute.ToString("00"))
            </dd>

            <dt class="col-sm-2">
                @Html.DisplayFor(model => model.IntervalEnable)
                @Html.DisplayNameFor(model => model.IntervalEnable)
            </dt>
            <dd class="col-sm-10">
                @Html.Raw(Model.IntervalDay) روز
                -
                @Html.Raw(Model.IntervalHour.ToString("00"))
                ساعت
                :
                @Html.Raw(Model.IntervalMinute.ToString("00"))
                دقیقه
            </dd>

            <dt class="col-sm-2">
                @Html.DisplayFor(model => model.ToDateEnable)
                @Html.DisplayNameFor(model => model.ToDateEnable)
            </dt>
            <dd class="col-sm-10">
                @Html.Raw(Model.ToDate)
                -
                @Html.Raw(Model.ToHour.ToString("00"))
                ساعت
                :
                @Html.Raw(Model.ToMinute.ToString("00"))
                دقیقه
            </dd>

            <dt class="col-sm-2">
                زمان پخش بعدی در
            </dt>
            <dd class="col-sm-10">
                @Html.Raw(Model.NextDate)
                -
                @Html.Raw(Model.NextHour.ToString("00"))
                ساعت
                :
                @Html.Raw(Model.NextMinute.ToString("00"))
                دقیقه
            </dd>

            <hr/>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Volume)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Volume)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Enable)
            </dt>
            <dd class="col-sm-10">
                @Html.Raw(Model.Enable ? "فعال" : "غیرفعال")
            </dd>
        </dl>
        <hr/>
        <div class="mb-3">
            <a class="btn btn-danger" asp-action="Index">بازگشت</a>
        </div>
    </div>
</div>